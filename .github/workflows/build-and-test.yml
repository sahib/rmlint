name: Build and test rmlint (master)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RM_TS_DIR: "/tmp/rmlint-unit-testdir"
    steps:
      - uses: actions/checkout@v4
      - name: "Prepare build environment"
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            scons python3-sphinx gettext python3-setuptools \
            libblkid-dev libelf-dev libglib2.0-dev libjson-glib-dev \
            clang python3-pip python3-cffi python3-dev libffi-dev
          pip3 install -r tests/requirements.txt
      - name: "Build"
        # Todo: eventually run tests with valgrind (RM_TS_USE_VALGRIND)
        # Todo enable slow tests in pytest
        run: |
          scons config
          scons VERBOSE=1 DEBUG=1 O=release
      - name: "Prepare test environment"
        # The test suite is seriously disk-intensive. Given that linux
        #  instances hosted in GitHub have 16G of RAM available we will
        #  use it to speed up the run.
        run: |
          sudo mkdir "${RM_TS_DIR}"
          sudo mount -o size=12G,nr_inodes=0 -t tmpfs tmpfs "${RM_TS_DIR}"
      - name: "Test"
        run: |
          RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=0 python -m pytest -s -v
      - name: CoW tests
        shell: bash
        run: |
          sudo umount "${RM_TS_DIR}"
          sudo modprobe brd rd_nr=1 rd_size=12582912
          sudo mkfs.btrfs -f /dev/ram0
          sudo mount /dev/ram0 "${RM_TS_DIR}"
          sudo chmod 0777 "${RM_TS_DIR}"
          cat <<'EOF' >> tests/conftest.py

          def pytest_collection_modifyitems(items, config):
              selected_items = []
              deselected_items = []

              for item in items:
                  if "needs_reflink_fs" in getattr(item, "fixturenames", ()):
                      selected_items.append(item)
                  else:
                      deselected_items.append(item)
              config.hook.pytest_deselected(items=deselected_items)
              items[:] = selected_items
          EOF
          RM_TS_PRINT_CMD=1 RM_TS_PEDANTIC=0 python -m pytest -s -v
      - name: "Cleanup"
        run: |
          sudo umount "${RM_TS_DIR}"
          sudo rmdir "${RM_TS_DIR}"
